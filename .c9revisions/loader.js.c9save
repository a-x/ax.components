{"ts":1359568443277,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function(global) {\r\n\r\n    var ls = global.localStorage\r\n        , scripts = document.scripts\r\n        , globalEval = global.execScript || global.eval // IE<9\r\n        , createRequestObject = function() {\r\n            if(typeof XMLHttpRequest === 'undefined') {\r\n                XMLHttpRequest = function() {\r\n                    try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); }\r\n                    catch(e) { }\r\n                    try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); }\r\n                    catch(e) { }\r\n                    try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); }\r\n                    catch(e) { }\r\n                    try { return new ActiveXObject(\"Microsoft.XMLHTTP\"); }\r\n                    catch(e) { }\r\n                    throw new Error(\"This browser does not support XMLHttpRequest.\");\r\n                };\r\n            }\r\n            return new XMLHttpRequest();\r\n        }\r\n        , get = function(url, callback) {\r\n            var req = createRequestObject();\r\n            req.open(\"GET\", url);\r\n            //req.setRequestHeader(\"If-Modified-Since\", \"Sat, 1 Jan 2000 00:00:00 GMT\");\r\n            req.onreadystatechange = function() {\r\n                if(req.readyState == 4 && req.status == 200) {\r\n                    callback(req.responseText);\r\n                }\r\n            }\r\n            req.send(null);\r\n        }\r\n\r\n    // FIXME:Test \r\n    /*globalEval = function(code) {\r\n        var s=document.getElementsByTagName('script')[0];\r\n        var ga=document.createElement('script');\r\n        ga.type='text/javascript';\r\n        ga.async=true;\r\n//        ga.src='http://www.google-analytics.com/ga.js';\r\n        ga.text = code;\r\n        s.parentNode.insertBefore(ga,s);\r\n    };*/\r\n            \r\n    for(var i = 0, l = scripts.length; i < l; ++i) {\r\n        var el = scripts[i]\r\n            , src = el.getAttribute(\"data-src\") || \"\"\r\n            , version = el.getAttribute(\"data-version\") // src.substring(src.lastIndexOf(\"#\") + 1) //\r\n            , key = src;\r\n\r\n        // ... data-src=\"/js/script.js#0.0.1\" ...\r\n        var idx = src.lastIndexOf(\"#\");\r\n        if(idx > 0) {\r\n            version = src.substring(idx + 1) //\r\n            src = src.substring(0, idx);\r\n            key = src;\r\n        }\r\n        console.log(src, version);\r\n\r\n        // check data\r\n        if(!src)\r\n            continue;\r\n\r\n        if(ls) {\r\n            var script = ls[key] || \"\";\r\n            var scriptVersion = script.substring(script.lastIndexOf(\"//\") + 2);\r\n            \r\n            if(version && scriptVersion == version) { \r\n                globalEval(script);\r\n            } else {\r\n                // reload when not version;\r\n                (function(key, version) {\r\n                    get(src, function(script) {\r\n                        ls[key] = script + \"//\" + version;\r\n                        //document.write('<script>'+script+'<\\/script>')\r\n                        globalEval(script);\r\n                    });\r\n                })(key, version);\r\n            }\r\n        } else {\r\n            //document.write('<script src=\"' + src +'\"><\\/script>')\r\n            get(src, function(script) { globalEval(script); });\r\n        }\r\n    };\r\n})(this)\r\n        \r\n        \r\n/* $ version \r\n(function (global) { // $ version\r\n    var ls = global.localStorage;\r\n    $(\"script\").each( function (index, element) {//TODO: selector for script\r\n        var $el = $(element)\r\n            , src = $el.data(\"src\")\r\n            , version = $el.data(\"version\")\r\n            , key = src //$el.data(\"key\")\r\n        // check data\r\n        if (!src || !version)\r\n            return;\r\n\r\n        if (ls) {\r\n            var script = ls[key] || \"\";\r\n            var scriptVersion = script.substring(script.lastIndexOf(\"//\")+2);\r\n            if (scriptVersion == version) {\r\n                    $.globalEval(script);\r\n            } else {\r\n                $.get(src, function(script) {\r\n                    ls[key] = script + \"//\" + version;\r\n                    $.globalEval(script);\r\n                });\r\n            }\r\n        } else {\r\n            $.getScript(src);\r\n        }\r\n    });\r\n})(this)\r\n*/\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4138}]],"length":4138}
